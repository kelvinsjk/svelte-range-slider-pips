---
import { Icon } from 'astro-icon'

interface Props {
  propName: string;
  propType: "Function";
}

const { propName, propType } = Astro.props
const isRender = propName && propType
---

{isRender &&

  <section class="sliderProp" id={propName}>
    <header class="sliderProp__header">
      <h2 title="The prop name"><a href={`#${propName}`}>{propName}</a></h2>
      <code title="The type that the prop expects">{propType}</code>
    </header>

    <div class="sliderProp__example">
      <slot name="example" />
    </div>

    <div class="sliderProp__content">
      <slot />
    </div>

    <div class="sliderProp__detail">
      <slot name="detail" />
    </div>
  </section>  

}

<style>

  .sliderProp {
    display: flex;
    flex-direction: column;
    padding: .5rem;
    border: 1px solid transparent;
    transition: background 0.2s ease-in-out;
    overflow: hidden;
  }

  .sliderProp + .sliderProp {
    margin-block-end: 2rem;
  }

  .sliderProp:nth-of-type(even) {
    background: hsla(var(--color-gray-90), .5);
  }

  .sliderProp:nth-of-type(even) :global(code) {
    background-color: white;
  }

  .sliderProp:target,
  .sliderProp:focus-within,
  .sliderProp:hover {
    border-color: hsla(var(--color-purple), .5);
    border-radius: 5px;
    padding-inline: .5rem;
  }

  .sliderProp:target,
  .sliderProp:focus-within {
    box-shadow: var(--shadow-elevation-medium);
  }

  .sliderProp:target {
    animation: pulsate-fwd 1s cubic-bezier(0.770, 0.000, 0.175, 1.000) both;
  }

  .sliderProp:hover {
    border-color: hsla(var(--color-gray-50), .5);
  }

  .sliderProp__header {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding-block: .25rem .75rem;
    padding-inline: .25rem 0;
    border-bottom: 1px solid hsla(var(--color-gray-90));
  }

  .sliderProp__header h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
  }

  .sliderProp__header h2 a {
    color: inherit;
    text-decoration: none;
  }

  .sliderProp:target .sliderProp__header {
    border-bottom-color: hsla(var(--color-gray-70));
  }

  .sliderProp__header > :nth-child(1) {
    flex: 1 1 auto;
  }
  .sliderProp__header > :nth-child(1n + 2) {
    flex: 0 0 fit-content;
    margin-left: 1rem;
  }

  .sliderProp__content {
    padding: .5rem;
    transition: all 0.2s ease-in-out;
  }

  .sliderProp__content :global(p:not(:last-child)) {
    margin-bottom: 1em;
  }

  .sliderProp__link {
    display: inline-block;
    margin-left: auto;
    padding: .25rem .5rem;
    border-radius: .25rem;
    text-decoration: none;
  }

  .sliderProp__example :global( pre ),
  .sliderProp__detail :global( pre ) {
    border: none;
    border-radius: 0.5em;
    margin-block: 0.5em;
  }

  .sliderProp__detail :global( pre ) {
    margin-block-end: 0;
  }

  .sliderProp__example :global( pre code ),
  .sliderProp__detail :global( pre code ) {
    background: transparent!important;
  }



/**
 * ----------------------------------------
 * animation pulsate-fwd
 * ----------------------------------------
 */
@-webkit-keyframes pulsate-fwd {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.1);
            transform: scale(1.1);
  }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
@keyframes pulsate-fwd {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.1);
            transform: scale(1.1);
  }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}


</style>