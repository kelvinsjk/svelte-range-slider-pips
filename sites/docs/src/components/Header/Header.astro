---
import { getLanguageFromURL, KNOWN_LANGUAGE_CODES } from '../../languages'
import { SITE, REPOPATH } from '../../consts'

import Logo from './Logo.astro'
import SkipToContent from './SkipToContent.astro'
import SidebarToggle from './SidebarToggle.svelte'
import LanguageSelect from './LanguageSelect.svelte'
// import Search from './Search'

type Props = {
  currentPage: string
}

const { currentPage } = Astro.props
const lang = getLanguageFromURL(currentPage)
---

<header>
  <SkipToContent />
  <nav class="nav-wrapper" title="Top Navigation">
    <div class="menu-toggle">
      <SidebarToggle client:idle />
    </div>
    <div style="flex-grow: 1;"></div>
    <div class="search-item">
      <!-- <Search client:idle /> -->
    </div>
    <div class="logo flex">
      <a href={`/${REPOPATH}/`}>
        <Logo size={60} />
        <h1>{SITE.title ?? 'Documentation'}</h1>
      </a>
    </div>
    {
      KNOWN_LANGUAGE_CODES.length > 1 && (
        <LanguageSelect lang={lang} client:load />
      )
    }
  </nav>
</header>

<style>
  header {
    
    --shadow-elevation-high: 
      0px -0.2px 0.2px hsl(var(--shadow-color) / 0.02),
      0px -1.3px 1.6px -0.3px hsl(var(--shadow-color) / 0.03),
      -0.1px -2.5px 3px -0.7px hsl(var(--shadow-color) / 0.04),
      -0.1px -4.1px 4.9px -1px hsl(var(--shadow-color) / 0.05),
      -0.1px -6.6px 7.9px -1.3px hsl(var(--shadow-color) / 0.06),
      -0.4px -10.6px 12.7px -1.7px hsl(var(--shadow-color) / 0.07),
      -0.6px -16.4px 19.7px -2px hsl(var(--shadow-color) / 0.07);

    z-index: 11;
    height: var(--theme-navbar-height);
    width: 100%;
    background-color: var(--theme-navbar-bg);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: fixed;
    bottom: 0;
    box-shadow: var(--shadow-elevation-high);
  }

  .logo {
    flex: 1;
    display: flex;
    overflow: hidden;
    width: 3rem;
    font-size: 2rem;
    flex-shrink: 0;
    font-weight: 600;
    line-height: 1;
    color: hsla(var(--color-base-white), 100%, 1);
    gap: 0.25em;
  }

  .logo a {
    display: flex;
    flex: 0 0 3rem;
    max-width: 3rem;
    text-decoration: none;
    font-weight: bold;
    transition: color 100ms ease-out;
    color: var(--theme-text);
  }

  .logo a:hover,
  .logo a:focus {
    color: var(--theme-text-accent);
  }

  .logo h1 {
    display: none;
    font: inherit;
    color: inherit;
    margin: 0;
  }

  .nav-wrapper {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-direction: row-reverse;
    gap: 1em;
    width: 100%;
    max-width: 82em;
    padding: 0 1rem;
  }

  @media (min-width: 50em) {
    header {
      position: static;
      padding: 2rem 0rem;
    }

    .logo {
      width: auto;
      margin: 0;
      z-index: 0;
    }

    .logo a {
      max-width: none;
      flex: 1 0 0%;
    }

    .logo :global(svg) {
      max-height: 4rem;
    }

    .logo h1 {
      display: initial;
    }

    .menu-toggle {
      display: none;
    }
  }

  /** Style Algolia */
  :root {
    --docsearch-primary-color: var(--theme-accent);
    --docsearch-logo-color: var(--theme-text);
  }

  .search-item {
    /* display: none; */
    position: relative;
    z-index: 10;
    flex-grow: 1;
    padding-right: 0.7rem;
    display: flex;
    max-width: 200px;
  }

  @media (min-width: 50em) {
    .search-item {
      max-width: 400px;
    }
  }
</style>

<style is:global>
  .search-item > * {
    flex-grow: 1;
  }
</style>
